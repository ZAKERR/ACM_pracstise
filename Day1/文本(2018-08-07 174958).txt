#include<cstdio>#include<iostream>#include<cstring>#include<algorithm>#include<stack>#include<vector>using namespace std;stack<int> s;vector<int> g[300100];int n,m,vis[300100],tot,circle[300100],color[300100],vis2[302003];bool o=false;void dfs(int u)//vis==0表示还没有访问过,vis==1表示访问过正在栈中，vis==2表示访问过，已经出栈了{	if(o) return;	vis[u]=1;	s.push(u);	for (int i=0; i<g[u].size(); i++)		if(g[u][i])		{			if(vis[i]==2)continue;			if(vis[i]==0)			{				dfs(i);				return ;			}do{				circle[++tot]=s.top();				if (s.top()==i)break;				s.pop();			}while(true);			o=true;			return;		}	vis[u]=2;	s.pop();}void dfs2(int x,int f){	vis2[x]=1;if(color[f]==0)color[x]=1;else color[x]=0;	for(int i=0;i<g[x].size();i++)	{		if(vis2[g[x][i]])continue;		dfs2(g[x][i],x);	}}int main(){	scanf("%d%d",&n,&m);	for(int i=1;i<=m;i++)	{		int u,v;		scanf("%d%d",&u,&v);		g[u].push_back(v);		g[v].push_back(u);	}	dfs(1);	printf("tot=%d\n",tot);	if(tot%2==1)	{		printf("%d\n",tot);		for(int i=1;i<=tot;i++)printf("%d ",circle[i]);	}	else	{		dfs2(1,1);		printf("0\n");		for(int i=1;i<=n;i++)		{			printf("%d ",color[i]);		}	}	return 0;}