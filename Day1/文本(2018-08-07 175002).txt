#include<cstdio>#include<iostream>#include<cstring>#include<algorithm>#include<vector>#include<stack>using namespace std;stack<int> s;vector<int> g[300100];bool o=false;int n,m,tot,circle[300100],color[300100],vis[300100],vis2[301000];void dfs2(int x,int f){	vis2[x]=1;if(color[f]==1)color[x]=0;else color[x]=1;	for(int i=0;i<g[x].size();i++)	{		int v=g[x][i];		if(!vis2[v])		{			dfs2(v,x);		}	}}void dfs(int u){	if(o) return;	vis[u]=1;	s.push(u);	for (int i=0; i<g[u].size(); i++)		if(g[u][i])		{			if(vis[i]==2)continue;			if(vis[i]==0)			{				dfs(i);				return ;			}do{				circle[++tot]=s.top();				if (s.top()==i)break;				s.pop();			}while(true);			o=true;			return;		}	vis[u]=2;	s.pop();}int main(){	scanf("%d%d",&n,&m);	for(int i=1;i<=m;i++)	{		int u,v;		scanf("%d%d",&u,&v);		g[u].push_back(v);		g[v].push_back(u);	}	for(int i=1;i<=n;i++)	{		if(!vis[i])dfs(i);	}	if(tot!=-1&&tot%2==1)	{		printf("%d\n",tot);		for(int i=1;i<=tot;i++)printf("%d ",circle[i]);	}	else	{		dfs2(1,1);		printf("0\n");for(int i=1;i<=n;i++)printf("%d ",color[i]);	}	return 0;}